Project01_AllView

<TabLayout>
사용자가 화면을 옆으로 손가락으로 넘김 (Swipe)시켰을때 화면이 넘어가는 처리를 동적으로
애니메이션효과를 주면서 사용할수있는 레이아웃.
CoordinatorLayout
    AppBarLayout
        TabLayout

01.ListView (복습)
02.GridView (신규 , 격자형으로 같은 모양의 데이터를 보여줄때 사용) <- 같이 마스터됨
03.RecyclerView ( 가로,세로 종횡 방향 모두 가능한 리스트뷰 (자식) ) ☆☆
04.ViewPager2 ( 슬라이드 ) ↑ 리사이클러뷰 마스터 시 자동으로 습득 되는 부분.


1.데이터를 바인딩 시킬 DTO를 먼저 만든다. ( 이름(String) , 상메(String) , 프로필(int,ImageRe..)
2.데이터를 보여줄 형태를 가진 Layout을 만듬 ( res->layout )
3.↑두가지를 이용해서 Adapter를 만듬.


-BaseAdapter ( ListView ,GridView )
 1.extends BaseAdapter <= 일반 클래스에서 Adapter형태로 상속을 바꿔서 바뀜.
 2.메소드 상속 받기.

     public int getCount() : 리스트뷰에 보여지는 총 리스트 요소의 갯수를 지정함.
                            (DTO가 아직 준비가 안 된 상태에서는 대충 아무숫자나 넣고 모양만 볼수도있음)

     public Object getItem(int i) : getItem메소드를 호출을 하면 ArrayList나 각종
                                    Object를 리턴받기 위한메소드

     public long getItemId(int i) : 각각의 리스트에 아이디를 리턴해주는 부분 (대부분 position리턴 key)

     public View getView(int position, View convertView, ViewGroup parent)
                                   : 칸마다 보여주는 데이터에 사용할 레이아웃을 붙이는 처리
                                   : position 몇번째 칸.
                                   : convertView 어떤 레이아웃?
                                   : parent 몇번째 칸의 레이아웃(리스트뷰 0번째 레이아웃에 convertView붙임)


-RecycleViewAdapter ( RecyclerView , ViewPager2 )

   //1.리사이클러뷰는 ViewHolder라는 클래스의 생성(InnerClass)을 강제하기 때문에
    //중첩클래스로 ViewHolder를 만듬
    //ViewHolder <= 매번 getView를 할때마다 위젯을 새로 찾고
    //디자인을 다시 붙이는게 아니라 한번 찾은 인덱스는 미리 찾아놓은 클래스를 통해서
    //사용할수있게함. // 즉 뷰(디자인묶음) 자체를 재활용 할수있는 형태로 사용.※



실습 문제)
패키지 추가 ex02selflistview
-MainACtivity TabLayout에 내 리스트뷰라는 탭추가
-해당하는 탭 선택시 나오게 만들 프래그먼트 추가 (ex MyListFragment)
-내가 선정한 아이템에 대한 DTO , XML , ADAPTER 등 만들기
----------------------------------------------------------------
-같은 구간에서 10분이상 막히면 물어보기(저,주변)
-프로젝트 진행 시 1시간이상 막히면 물어보기
-↑처음 사용하는 API의 경우 하루~이틀 이상 막히면.